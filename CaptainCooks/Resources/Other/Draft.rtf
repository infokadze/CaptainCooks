{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red31\green31\blue36;\red252\green95\blue163;
\red65\green161\blue192;\red208\green168\blue255;\red208\green168\blue255;\red108\green121\blue134;\red108\green121\blue134;
}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000\c85000;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98839\c37355\c63833;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81569\c65882\c100000;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c42394\c47462\c52518\c45000;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab642
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \
    \
    \
    
\f1\b \cf4 \cb3 func
\f0\b0 \cf2 \cb3  \cf5 \cb3 tableView\cf2 \cb3 (\cf5 \cb3 _\cf2 \cb3  tableView: \cf6 \cb3 UITableView\cf2 \cb3 , \cf5 \cb3 didSelectRowAt\cf2 \cb3  indexPath: \cf7 \cb3 IndexPath\cf2 \cb3 ) \{\
\cf8 //        print("tableView tag is \\(tableView.tag)")\cf2 \
\cf8 //        print("indexpath is \\(indexPath)")\cf2 \
        \
\cf8 // experimenting\cf2 \
\cf8 //        let nums = Int.random(in: 0...17, excluding: indexPath.item)\cf2 \
\cf8 //        tableView.scrollToRow(at: [0, nums], at: .middle, animated: true)\cf2 \
    \}\
\
\
\cf8 //        NotificationCenter.default.addObserver(self,\cf2 \
\cf8 //                                               selector: #selector(applicationWillTerminate),\cf2 \
\cf8 //                                               name: UIApplication.willTerminateNotification,\cf2 \
\cf8 //                                               object: nil)\cf2 \
\
    \
\cf8 //    @objc func applicationWillTerminate() \{\cf2 \
        \
\cf8 //        let calendar = Calendar.current\cf2 \
\cf8 //        let dateToCompare = UserDefault.currentDate\cf2 \
\cf8 //\cf2 \
\cf8 //        if calendar.isDateInTomorrow(dateToCompare) \{\cf2 \
\cf8 //            UserDefault.currentDate = Date()\cf2 \
\cf8 //        \} else \{\cf2 \
\cf8 //            UserDefault.currentDate = Date()\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}\cf2 \
    \
\
\cf8 //\} else if allCoin <= 0 \{\cf2 \
\cf8 //    gameView.setCustom(view.sorryView, height: 220, width: 346)\cf2 \
\cf8 //    gameView.animateIn(view.sorryView)\cf2 \
\cf8 //\}\cf2 \
\cf8 //\}\cf2 \
    \
\cf8 //    #warning("set to the button on main screen")\cf2 \
\cf8 //    if indexPath.item == 0 \{\cf2 \
\cf8 //        let controller = self.storyboard?.instantiateViewController(withIdentifier: "SlotViewController") as! SlotViewController\cf2 \
\cf8 //        controller.slotsElements = slotsElementsPack2\cf2 \
\cf8 //        self.navigationController?.pushViewController(controller, animated: true)\cf2 \
\cf8 //    \} else if indexPath.item == 1 \{\cf2 \
\cf9 ///
\f2 \cf8 /            if Level.shared.level >= 2 \{
\f0 \cf2 \
\cf8 //            let controller = self.storyboard?.instantiateViewController(withIdentifier: "SlotViewController") as! SlotViewController\cf2 \
\cf8 //            controller.slotsElements = slotsElementsPack1\cf2 \
\cf8 //            self.navigationController?.pushViewController(controller, animated: true)\cf2 \
\cf9 ///
\f2 \cf8 /            \}
\f0 \cf2 \
\cf8 //    \} else if indexPath.item == 2 \{\cf2 \
\cf8 //        if Level.shared.coinsPool >= 5000 \{\cf2 \
\cf8 //            UserDefaultsManager.LevelChoose = 2\cf2 \
\cf8 //            Level.shared.coinsPool = Level.shared.coinsPool - 5000\cf2 \
\cf8 //        \}\cf2 \
\cf8 //        if UserDefaultsManager.LevelChoose == 2 \{\cf2 \
\cf8 //            let controller = self.storyboard?.instantiateViewController(withIdentifier: "SlotViewController") as! SlotViewController\cf2 \
\cf8 //            controller.slotsElements = slotsElementsPack2\cf2 \
\cf8 //            self.navigationController?.pushViewController(controller, animated: true)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \} else if indexPath.item == 3 \{\cf2 \
\cf8 //        if Level.shared.coinsPool >= 8000 \{\cf2 \
\cf8 //            UserDefaultsManager.LevelChoose = 2\cf2 \
\cf8 //            Level.shared.coinsPool = Level.shared.coinsPool - 8000\cf2 \
\cf8 //        \}\cf2 \
\cf8 //        if UserDefaultsManager.LevelChoose == 2 \{\cf2 \
\cf8 //            let controller = self.storyboard?.instantiateViewController(withIdentifier: "SlotViewController") as! SlotViewController\cf2 \
\cf8 //            controller.slotsElements = slotsElementsPack1\cf2 \
\cf8 //            self.navigationController?.pushViewController(controller, animated: true)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \} else \{\cf2 \
\cf8 //        return\cf2 \
\cf8 //    \}\cf2 \
\cf8 //\}\cf2 \
\cf8 //\}\cf2 \
\cf8 //\cf2 \
\cf8 //    #warning("level to choose -> screen appearance")\cf2 \
\cf8 //    if UserDefaultsManager.LevelChoose == 0 \{\cf2 \
\cf8 //        for i in 1...4 \{\cf2 \
\cf8 //            imagesArray.append(UIImage(named: "\\(i)")!)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}else if UserDefaultsManager.LevelChoose == 2 \{\cf2 \
\cf8 //        imagesArray.removeAll()\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(1)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(2)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(5)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(4)")!)\cf2 \
\cf8 //    \}else if UserDefaultsManager.LevelChoose == 3 \{\cf2 \
\cf8 //        imagesArray.removeAll()\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(1)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(2)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(5)")!)\cf2 \
\cf8 //        imagesArray.append(UIImage(named: "\\(6)")!)\cf2 \
\cf8 //    \}\cf2 \
\cf8 //\cf2 \
\cf8 //    #warning("+ - buttons")\cf2 \
\cf8 //    @IBAction func bet25MoreCoins(_ sender: UIButton) \{\cf2 \
\cf8 //        if coinsToBet < 300 \{\cf2 \
\cf8 //            coinsToBet += 25\cf2 \
\cf8 //            coinsToBetButton.setTitle("\\(coinsToBet)", for: .normal)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}\cf2 \
\cf8 //\cf2 \
\cf8 //\cf2 \
\cf8 //    @IBAction func bet25LessCoins(_ sender: UIButton) \{\cf2 \
\cf8 //        if coinsToBet > 25 \{\cf2 \
\cf8 //            coinsToBet -= 25\cf2 \
\cf8 //            coinsToBetButton.setTitle("\\(coinsToBet)", for: .normal)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}\cf2 \
\cf8 //    #warning("coins to bet")\cf2 \
\cf8 //    private var coinsToBet = 25\cf2 \
\cf8 //\cf2 \
\cf8 //    @IBOutlet weak var coinsToBetButton: UIButton!\{\cf2 \
\cf8 //        didSet \{\cf2 \
\cf8 //            coinsToBetButton.setTitle("\\(coinsToBet)", for: .normal)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}\cf2 \
\cf8 //\cf2 \
\cf8 //    #warning("coins balance")\cf2 \
\cf8 //    private var balance = Level.shared.coinsPool \{\cf2 \
\cf8 //        didSet \{\cf2 \
\cf8 //            Level.shared.coinsPool = coinsPool\cf2 \
\cf8 //            coinsCounterButton.setTitle("\\(coinsPool)", for: .normal)\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}\cf2 \
\cf8 //\cf2 \
\cf8 //    #warning("music button")\cf2 \
\cf8 //    @IBAction func musicTapped(_ sender: Any) \{\cf2 \
\cf9 ///
\f2 \cf8 /        if ismusicPlaying == false \{
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /            backgroundPlayer.cheer()
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /            ismusicPlaying = true
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /        \}else \{
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /            backgroundPlayer.stop()
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /            ismusicPlaying = false
\f0 \cf2 \
\cf9 ///
\f2 \cf8 /        \}
\f0 \cf2 \
\cf8 //        if Level.shared.musicOn == false \{\cf2 \
\cf8 //            backgroundPlayer.cheer()\cf2 \
\cf8 //            Level.shared.musicOn = true\cf2 \
\cf8 //        \}else \{\cf2 \
\cf8 //            backgroundPlayer.stop()\cf2 \
\cf8 //            Level.shared.musicOn = false\cf2 \
\cf8 //        \}\cf2 \
\cf8 //    \}}